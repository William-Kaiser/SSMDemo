<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lk1314.mapper.OrdersMapper">

    <sql id="OrdersColumns">
        a.id,
        a.user_Id ,
        a.orderno,
        a.ordername,
        u.username,
        u.password,
        d.id detail_id,
        d.price,
        d.detail

    </sql>

    <sql id="OrdersJoins">
        LEFT JOIN test_user u ON a.user_id = u.id
    </sql>

    <select id="get" resultType="Orders" >
        SELECT
        <include refid="OrdersColumns"/>
        FROM test_orders a
        <include refid="OrdersJoins"/>
        WHERE a.id = #{id}
    </select>

    <resultMap id="OrdersUserResultMap" type="Orders">
        <id column="id" property="orderId"/>
        <result column="user_id" property="userId"/>
        <result column="orderno" property="orderno"/>
        <result column="ordername" property="orderName"/>

        <association property="user" javaType="User">
            <id column="id" property="userId"/>
            <result column="username" property="userName"/>
            <result column="password" property="password"/>
        </association>

    </resultMap>

    <select id="findList" resultMap="OrdersUserResultMap">
        SELECT
        <include refid="OrdersColumns"/>
        FROM test_orders a
        <include refid="OrdersJoins"/>
        <where>
            <if test="orderId != null and orderId != ''">
                AND a.id = #{orderId}
            </if>
        </where>
    </select>

    <resultMap id="UserOrdersResultMap" type="User">

        <id column="id" property="userId"/>
        <result column="username" property="userName"/>
        <result column="password" property="password"/>

        <collection property="ordersList" ofType="Orders">
            <id column="id" property="orderId"/>
            <result column="user_id" property="userId"/>
            <result column="orderno" property="orderno"/>
            <result column="ordername" property="orderName"/>

        </collection>
    </resultMap>

    <select id="getUserOrders" resultMap="UserOrdersResultMap">
        SELECT
        <include refid="OrdersColumns"/>
        FROM test_orders a
        <include refid="OrdersJoins"/>
        <where>
            <if test="orderId != null and orderId != ''">
                AND a.id = #{orderId}
            </if>
        </where>
    </select>

    <resultMap id="UserAndOrdersResultMap" type="User">

        <id column="user_id" property="userId"/>
        <result column="username" property="userName"/>
        <result column="password" property="password"/>

        <collection property="ordersList" ofType="Orders">
            <id column="orders_id" property="orderId"/>
            <result column="user_id" property="userId"/>
            <result column="orderno" property="orderno"/>
            <result column="ordername" property="orderName"/>

            <collection property="orderdetails" ofType="Orderdetail">
                <id column="id" property="detailId"/>
                <result column="orders_id" property="ordersId"/>
                <result column="price" property="price"/>
                <result column="detail" property="detail"/>
            </collection>

        </collection>
    </resultMap>

    <select id="getUserAndOrders" resultMap="UserAndOrdersResultMap">
        SELECT
        <include refid="OrdersColumns"/>
        FROM test_orders a, test_user u, test_orders_detail d WHERE a.user_id = u.id
             AND d.orders_id = a.id
        <where>
            <if test="orderId != null and orderId != ''">
                AND a.id = #{orderId}
            </if>
        </where>
    </select>

    <insert id="insert">
        INSERT INTO test_orders(
        id,
        user_id,
        orderno,
        ordername
        ) VALUES (
        #{orderId},
        #{userId},
        #{orderno},
        #{orderName}
        )
    </insert>

    <update id="update">
        UPDATE test_orders SET
        user_id = #{userId},
        orderno = #{orderno},
        ordername = #{orderName}
        WHERE id = #{id}
    </update>

    <!--物理删除-->
    <update id="delete">
        DELETE FROM test_orders
        WHERE id = #{id}
    </update>

    <!--逻辑删除-->
    <!--<update id="deleteByLogic">-->
        <!--UPDATE dbd_terminal SET-->
        <!--del_flag = #{DEL_FLAG_DELETE}-->
        <!--WHERE id = #{id}-->
    <!--</update>-->


    <!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
    <select id="findUniqueByProperty" resultType="Orders" statementType="STATEMENT">
        select * FROM test_orders where ${propertyName} = '${value}'
    </select>


</mapper>